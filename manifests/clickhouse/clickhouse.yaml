apiVersion: v1
data:
  key: QVFCZXc0QlpVS0E3QlJBQVU3eHp3THo3dTJKY0RKZHdWYzFwT1E9PQ==
kind: Secret
type: kubernetes.io/rbd
metadata:
  name: ceph-secret-kube
  namespace: kube-logging
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: clickhouse
  namespace: kube-logging
  annotations:
    volume.beta.kubernetes.io/mount-options: "discard"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: rbd
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: clickhouse-server
  namespace: kube-logging
spec:
  revisionHistoryLimit: 1
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        component: clickhouse
    spec:
      initContainers:
      - name: chown
        image: alpine:3.6
        command: ['/bin/sh', '-c', 'chown 105:106 -R /var/lib/clickhouse']
        volumeMounts:
          - name: clickhouse
            mountPath: /var/lib/clickhouse
      containers:
      - name: clickhouse
        image: yandex/clickhouse-server
        ports:
        - name: http
          containerPort: 8123
        - name: native
          containerPort: 9000
        livenessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 60
          tcpSocket:
            port: 8123
        readinessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 5
          tcpSocket:
            port: 8123
        resources:
          requests:
            cpu: "1"
          limits:
            cpu: "4"
        volumeMounts:
          - name: clickhouse
            mountPath: /var/lib/clickhouse/
      volumes:
        - name: clickhouse
          persistentVolumeClaim:
            claimName: clickhouse
---
apiVersion: v1
kind: Service
metadata:
  name: clickhouse
  namespace: kube-logging
spec:
  selector:
    component: clickhouse
  ports:
    - name: http
      port: 8123
      targetPort: 8123
      protocol: TCP
    - name: native
      port: 9000
      targetPort: 9000
      protocol: TCP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: clickhouse
  namespace: kube-logging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
spec:
  rules:
  - host: ch.kube.allabout.me
    http:
      paths:
      - path: /
        backend:
          serviceName: clickhouse
          servicePort: http
  tls:
  - hosts:
    - ch.kube.allabout.me
    secretName: clickhouse
